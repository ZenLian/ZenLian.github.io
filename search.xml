<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[启用Hexo的资源文件夹]]></title>
    <url>%2F2019%2F02%2F28%2Fasset-test%2F</url>
    <content type="text"><![CDATA[Hexo上文章的资源文件少的时候，可以全都放在一个目录下，比如source/images/下存放所有文章的图片。但资源文件一旦多起来，这样的管理方式就会显得很乱，这时就要用到Hexo提供的资源文件夹功能，将同一篇文章的资源文件放在同一个文件夹下，便于管理。 启用资源文件夹启用资源文件夹很简单，只需要在站点配置文件_config.yml中将post_asset_folder选项打开。 hexo/_config.ymlpost_asset_folder: true 打开这个功能后，Hexo将会在你每次通过hexo new命令创建新文章时自动创建一个同名文件夹，这篇文章所有的资源都可以放在这个文件夹里，并在你的文章里通过相对路径引用。 通过相对路径引用使用相对路径的常规markdown语法会导致资源文件在首页不能正常显示，正确的引用方式是通过标签插件。 &#123;% asset_path slug %&#125;&#123;% asset_img slug [title] %&#125;&#123;% asset_link slug [title] %&#125; 比如这篇文章开头的图片为wallpaper.jpg，我将它放在同名资源文件夹里，然后在文章开头通过标签插件引用它： &#123;% asset_img wallpaper.jpg &quot;Why So Serious&quot; %&#125; 这样图片就能正确显示了。 这里asset_img的使用格式与img相同，参照Hexo的标签插件。 References 资源文件夹 | Hexo]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[测试Hexo与Next的标签插件]]></title>
    <url>%2F2019%2F02%2F24%2Ftag-plugins-test%2F</url>
    <content type="text"><![CDATA[Hexo支持标签插件，用来插入一些特殊内容，而Next对其进行了扩展，在这里测试一下效果。 先来看看Hexo原生支持的标签插件。 Block QuoteQuote from a bookDo not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy. David LevithanWide Awake Quote from an article on the webEvery interaction is both precious and an opportunity to delight. Seth GodinWelcome to Island Marketing Code Block_.compactUnderscore.js_.compact([0, 1, false, 2, &apos;&apos;, 3]);=&gt; [1, 2, 3] 或者用反引号的方式更简洁 Backtick Code Block效果与Code Block相同，但用的是反引号，与Markdown一致。 hello.cppc++-wiki#include &lt;iostream&gt;int main(void)&#123; std::cout &lt;&lt; "hello!" &lt;&lt; std::endl; return 0;&#125; 其他还有Image用于插入指定大小的图片、YouTube或Vimeo用于插入视频、post_link用于插入指向其他文章的链接等，就不一一列举了。 下面是Next扩展的标签插件。 Centered QuoteRead the fucking source code! Include RawAny raw content may be included with this tag. Full Image没试过，好像意思是可以插入原始大小的图片？ Note Header(without define class style) Default HeaderWelcome to Hexo! Primary HeaderWelcome to Hexo! Info HeaderWelcome to Hexo! Success HeaderWelcome to Hexo! Warning HeaderWelcome to Hexo! Danger HeaderWelcome to Hexo! No icon noteNote without icon: note info no-iconcode block in note tagcode block in note tagcode block in note tag Codeblock in notecode block in note tagcode block in note tagcode block in note tag Lists in noteulululululololololol Table in Note 12345678 ButtonButton with text &amp; iconText & Large Icon Button inside textThis is my home. External URLWelcome to Theme NexT Organization!If you want new feature or want to report a bug, feel free to open an issue.And if you have coding skills, NexT will be glad for your pull request. 看起来似乎和markdown的链接没什么区别？ LabelLorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. TabsPermalink for &gt; Tab one.Permalink for &gt; Tab one 1.Permalink for &gt; Tab one 2.Permalink for &gt; Tab one 3. Permalink for &gt; Tab two.Permalink for &gt; Tab two 1.Permalink for &gt; Tab two 2.Permalink for &gt; Tab two 3. Tab one 1Tab one 2Tab one 3This is Tab 1.This is Tab 2.This is Tab 3. Tab two 1Tab two 2Tab two 3This is Tab 1.This is Tab 2.This is Tab 3. References Tag Plugins | Hexo Tag Plugins | NexT]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[搭建git服务器]]></title>
    <url>%2F2019%2F02%2F24%2Fbuild-a-git-server%2F</url>
    <content type="text"><![CDATA[个人项目放在github上可以很好的进行管理，但考虑到网速问题以及有些团队项目不适合放在github上，这时就需要建立一个git服务器进行代码的备份与集中管理。对git用户的管理有两种方式，一种是为每一个成员创建一个账户，另一种是所有用户都通过git账户与服务器交互。 创建git账户​sudo adduser git 禁用shell登录将/etc/passwd文件的git用户那一行最后的/bin/bash改为/usr/bin/git-shell 创建证书登录将需要登录的用户的公钥（即用户的~/.ssh/id_rsa.pub文件）导入到git的/home/git/.ssh/authorized_keys文件里。 也可采用git账户+密码的方式登录，这样需要先设置git账户的密码： sudo passwd git 初始化git仓库选定一个目录为git仓库，如/opt/git sudo mkdir /opt/git 在/opt/git目录下创建一个裸仓库 sudo git init --bare sample.git 记得把owner改为git，否则git用户无法访问 sudo chown -R git:git /opt/git 克隆和推送远程仓库用git clone命令克隆远程仓库： git clone git@server.ip.addr:/opt/git/sample.git 其余的git操作与github无异。 References 搭建Git服务器 - 廖雪峰的官方网站 Git - Getting Git on a Server]]></content>
      <categories>
        <category>计算机</category>
        <category>git</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Markdown效果测试]]></title>
    <url>%2F2019%2F02%2F23%2Fmarkdown-test%2F</url>
    <content type="text"><![CDATA[测试一下Hexo的Markdown支持效果，采用的是马克飞象的示例文档。 欢迎使用马克飞象@(示例笔记本)[马克飞象|帮助|Markdown] 马克飞象是一款专为印象笔记（Evernote）打造的Markdown编辑器，通过精心的设计与技术实现，配合印象笔记强大的存储和同步功能，带来前所未有的书写体验。特点概述： 功能丰富 ：支持高亮代码块、LaTeX 公式、流程图，本地图片以及附件上传，甚至截图粘贴，工作学习好帮手； 得心应手 ：简洁高效的编辑器，提供桌面客户端以及离线Chrome App，支持移动端 Web； 深度整合 ：支持选择笔记本和添加标签，支持从印象笔记跳转编辑，轻松管理。 [TOC] Markdown简介 Markdown 是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档，然后转换成格式丰富的HTML页面。 —— 维基百科 正如您在阅读的这份文档，它使用简单的符号标识不同的标题，将某些文字标记为粗体或者斜体，创建一个链接或一个脚注[^demo]。下面列举了几个高级功能，更多语法请按Ctrl + /查看帮助。 代码块@requires_authorizationdef somefunc(param1='', param2=0): '''A docstring''' if param1 &gt; param2: # interesting print 'Greater' return (param2 - param1 + 1) or Noneclass SomeClass: pass&gt;&gt;&gt; message = '''interpreter... prompt''' LaTeX 公式可以创建行内公式，例如 $\Gamma(n) = (n-1)!\quad\forall n\in\mathbb N$。或者块级公式： $$ x = \dfrac{-b \pm \sqrt{b^2 - 4ac}}{2a} $$ 表格 Item Value Qty Computer 1600 USD 5 Phone 12 USD 12 Pipe 1 USD 234 流程图st=&gt;start: Starte=&gt;endop=&gt;operation: My Operationcond=&gt;condition: Yes or No?st-&gt;op-&gt;condcond(yes)-&gt;econd(no)-&gt;op 以及时序图: Alice-&gt;Bob: Hello Bob, how are you?Note right of Bob: Bob thinksBob--&gt;Alice: I am good thanks! 提示：想了解更多，请查看流程图语法以及时序图语法。 复选框使用 - [ ] 和 - [x] 语法可以创建复选框，实现 todo-list 等功能。例如： 已完成事项 待办事项1 待办事项2 注意：目前支持尚不完全，在印象笔记中勾选复选框是无效、不能同步的，所以必须在马克飞象中修改 Markdown 原文才可生效。下个版本将会全面支持。 印象笔记相关笔记本和标签马克飞象增加了@(笔记本)[标签A|标签B]语法, 以选择笔记本和添加标签。 绑定账号后， 输入(自动会出现笔记本列表，请从中选择。 笔记标题马克飞象会自动使用文档内出现的第一个标题作为笔记标题。例如本文，就是第一行的 欢迎使用马克飞象。 快捷编辑保存在印象笔记中的笔记，右上角会有一个红色的编辑按钮，点击后会回到马克飞象中打开并编辑该笔记。 注意：目前用户在印象笔记中单方面做的任何修改，马克飞象是无法自动感知和更新的。所以请务必回到马克飞象编辑。 数据同步马克飞象通过将Markdown原文以隐藏内容保存在笔记中的精妙设计，实现了对Markdown的存储和再次编辑。既解决了其他产品只是单向导出HTML的单薄，又规避了服务端存储Markdown带来的隐私安全问题。这样，服务端仅作为对印象笔记 API调用和数据转换之用。 隐私声明：用户所有的笔记数据，均保存在印象笔记中。马克飞象不存储用户的任何笔记数据。 离线存储马克飞象使用浏览器离线存储将内容实时保存在本地，不必担心网络断掉或浏览器崩溃。为了节省空间和避免冲突，已同步至印象笔记并且不再修改的笔记将删除部分本地缓存，不过依然可以随时通过文档管理打开。 注意：虽然浏览器存储大部分时候都比较可靠，但印象笔记作为专业云存储，更值得信赖。以防万一，请务必经常及时同步到印象笔记。 编辑器相关设置右侧系统菜单（快捷键Ctrl + M）的设置中，提供了界面字体、字号、自定义CSS、vim/emacs 键盘模式等高级选项。 快捷键帮助 Ctrl + /同步文档 Ctrl + S创建文档 Ctrl + Alt + N最大化编辑器 Ctrl + Enter预览文档 Ctrl + Alt + Enter文档管理 Ctrl + O系统菜单 Ctrl + M 加粗 Ctrl + B插入图片 Ctrl + G插入链接 Ctrl + L提升标题 Ctrl + H 关于收费马克飞象为新用户提供 10 天的试用期，试用期过后需要续费才能继续使用。未购买或者未及时续费，将不能同步新的笔记。之前保存过的笔记依然可以编辑。 反馈与建议 微博：@马克飞象，@GGock 邮箱：&#104;&#117;&#x73;&#x74;&#x67;&#111;&#99;&#x6b;&#64;&#103;&#109;&#x61;&#105;&#108;&#x2e;&#99;&#111;&#x6d; 感谢阅读这份帮助文档。请点击右上角，绑定印象笔记账号，开启全新的记录与分享体验吧。 [^demo]: 这是一个示例脚注。请查阅 MultiMarkdown 文档 关于脚注的说明。 限制： 印象笔记的笔记内容使用 ENML 格式，基于 HTML，但是不支持某些标签和属性，例如id，这就导致脚注和TOC无法正常点击。 References 马克飞象]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>markdown</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo搭建博客]]></title>
    <url>%2F2019%2F02%2F18%2Fblog-with-hexo%2F</url>
    <content type="text"><![CDATA[为什么要写博客，因为我听说，大佬都会写博客。 能把学到的知识清楚地讲出来让别人能听懂，自己才是真的懂了。 为了向大佬看齐，一时兴起，想把笔记从印象笔记迁移到博客上，于是有了这篇文章和这个网站。 当然，我还是喜欢印象笔记的，毕竟用了这么多年了，零零碎碎的东西以后还记在那里，系统性的就决定由这个博客接管了。这里的文章主要放学习笔记，以后也可能会写些其他东西。 下面记录搭建和配置博客的过程吧。 安装过程Hexo和Next的安装过程网上有很多，这里就不赘述了。可以参考【基于Hexo+Coding+Github搭建个人博客的全过程 | 十一種情緒的堆棧】这篇文章。 其实默认的主题Landcsape还挺好看的，所以我选择Next。 Next配置菜单栏配置默认菜单栏只有首页和归档，要为菜单栏添加标签和分类，更改next/_config.yml： menu: home: / || home #about: /about/ || user tags: /tags/ || tags categories: /categories/ || th archives: /archives/ || archive #schedule: /schedule/ || calendar #sitemap: /sitemap.xml || sitemap #commonweal: /404/ || heartbeat# Enable/Disable menu icons / item badges.menu_settings: icons: true badges: true 也就是将menu.tags字段和menu.catecories字段解注释，顺便将menu_settings.badges字段解注释以显示标签、分类和文章的数量。 此时博客菜单栏已经有标签和分类了，但是点进去发现无法进入网页，还需要生成标签和分类的页面。 $ cd your-hexo-site$ hexo new page tags 在source目录下会生成一个tags目录，编辑其中的index.md文件，将type字段改为&quot;tags&quot;： ---title: tagsdate: 2019-01-11 19:51:28type: &quot;tags&quot;--- 这样tags页面就建好了，对于categories页面也这样操作一遍就行了。 侧边栏配置添加社交链接，前面是链接，后面是图标（一直没找到合适的豆瓣图标） social: GitHub: https://github.com/zenlian || github E-Mail: mailto:zeninglian@gmail.com || envelope Steam: https://steamcommunity.com/profiles/76561198316675758 || steam Douban: https://www.douban.com/people/73582537/ || film 添加置顶按钮并显示百分比： sidebar: # Back to top in sidebar. b2t: true # Scroll percent label in b2t button. scrollpercent: true 脚注配置添加建站时间： footer: since: 2019 更改页面脚注为跳动的红心： footer: icon: name: heart animated: true color: "#f00000" footer.icon.name字段表示图标名，可以在Font Awesome网站上找到合适的图标。 实现效果像这样 文章发布配置点开阅读全文从头开始： scroll_to_more: false 保存阅读位置： save_scroll: true 不显示更改时间： post_meta: updated_at: enabled: false 代码块显示复制按钮及已复制信息： codeblock: copy_button: enable: true # Show text copy result show_result: true 更改代码高亮风格： highlight_theme: night 动画效果配置禁用加载动画： motion: enable: false 其他配置指向外部网站的链接后面会显示一个箭头： exturl: true 右上角显示Github角标： github_banner: https://github.com/zenlian || Follow me on GitHub References 文档 | Hexo Getting Started | NexT 基于Hexo+Coding+Github搭建个人博客的全过程 | 十一種情緒的堆棧]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
</search>
